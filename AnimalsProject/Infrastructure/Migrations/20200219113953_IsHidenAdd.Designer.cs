// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AnimalContext))]
    [Migration("20200219113953_IsHidenAdd")]
    partial class IsHidenAdd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Hamburg"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Munich"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Cologne"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Frankfurt"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Stuttgart"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Dusseldorf"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Dortmund"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "Essen"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "Leipzig"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChipNumber")
                        .HasColumnType("bigint");

                    b.Property<bool>("ContinuatitonOfTreatment")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long>("FoodId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FoundDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<double>("NeckCircumference")
                        .HasColumnType("float");

                    b.Property<int>("Sterialization")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("WithersHeight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FoodId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 2L,
                            AddressId = 2L,
                            CategoryId = 2L,
                            ChipNumber = 13345678L,
                            ContinuatitonOfTreatment = false,
                            DateOfBirth = new DateTime(2017, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 2L,
                            FoundDate = new DateTime(2018, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            IsAdopted = true,
                            IsHidden = false,
                            Name = "Lola",
                            NeckCircumference = 9.1999999999999993,
                            Sterialization = 2,
                            Weight = 25.5,
                            WithersHeight = 45.0
                        },
                        new
                        {
                            Id = 3L,
                            AddressId = 1L,
                            CategoryId = 1L,
                            ChipNumber = 12245678L,
                            ContinuatitonOfTreatment = true,
                            DateOfBirth = new DateTime(2018, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 1L,
                            FoundDate = new DateTime(2018, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Josh",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 0,
                            Weight = 15.5,
                            WithersHeight = 15.0
                        },
                        new
                        {
                            Id = 4L,
                            AddressId = 4L,
                            CategoryId = 3L,
                            ChipNumber = 12445678L,
                            ContinuatitonOfTreatment = false,
                            DateOfBirth = new DateTime(2014, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 3L,
                            FoundDate = new DateTime(2018, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Jimbo",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 1,
                            Weight = 5.5,
                            WithersHeight = 5.0
                        },
                        new
                        {
                            Id = 5L,
                            AddressId = 1L,
                            CategoryId = 1L,
                            ChipNumber = 12355678L,
                            ContinuatitonOfTreatment = false,
                            DateOfBirth = new DateTime(2018, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 1L,
                            FoundDate = new DateTime(2019, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Arnold",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 0,
                            Weight = 2.5,
                            WithersHeight = 15.0
                        },
                        new
                        {
                            Id = 6L,
                            AddressId = 6L,
                            CategoryId = 2L,
                            ChipNumber = 12346678L,
                            ContinuatitonOfTreatment = true,
                            DateOfBirth = new DateTime(2019, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 2L,
                            FoundDate = new DateTime(2019, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Sonia",
                            NeckCircumference = 1.2,
                            Sterialization = 0,
                            Weight = 25.5,
                            WithersHeight = 45.0
                        },
                        new
                        {
                            Id = 7L,
                            AddressId = 6L,
                            CategoryId = 1L,
                            ChipNumber = 12345778L,
                            ContinuatitonOfTreatment = true,
                            DateOfBirth = new DateTime(2018, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 1L,
                            FoundDate = new DateTime(2019, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Havoc",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 2,
                            Weight = 25.5,
                            WithersHeight = 45.0
                        },
                        new
                        {
                            Id = 8L,
                            AddressId = 2L,
                            CategoryId = 1L,
                            ChipNumber = 12345688L,
                            ContinuatitonOfTreatment = true,
                            DateOfBirth = new DateTime(2018, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 1L,
                            FoundDate = new DateTime(2019, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Khora",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 0,
                            Weight = 2.5,
                            WithersHeight = 15.0
                        },
                        new
                        {
                            Id = 9L,
                            AddressId = 2L,
                            CategoryId = 2L,
                            ChipNumber = 12345681L,
                            ContinuatitonOfTreatment = false,
                            DateOfBirth = new DateTime(2018, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 1L,
                            FoundDate = new DateTime(2018, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Alpaca",
                            NeckCircumference = 1.2,
                            Sterialization = 1,
                            Weight = 12.5,
                            WithersHeight = 5.0
                        },
                        new
                        {
                            Id = 10L,
                            AddressId = 5L,
                            CategoryId = 1L,
                            ChipNumber = 33345688L,
                            ContinuatitonOfTreatment = true,
                            DateOfBirth = new DateTime(2018, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 3L,
                            FoundDate = new DateTime(2018, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Bee",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 0,
                            Weight = 2.5,
                            WithersHeight = 15.0
                        },
                        new
                        {
                            Id = 11L,
                            AddressId = 4L,
                            CategoryId = 3L,
                            ChipNumber = 11145688L,
                            ContinuatitonOfTreatment = true,
                            DateOfBirth = new DateTime(2016, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 2L,
                            FoundDate = new DateTime(2018, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Puma",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 0,
                            Weight = 21.5,
                            WithersHeight = 5.0
                        },
                        new
                        {
                            Id = 12L,
                            AddressId = 1L,
                            CategoryId = 1L,
                            ChipNumber = 444445688L,
                            ContinuatitonOfTreatment = false,
                            DateOfBirth = new DateTime(2018, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 1L,
                            FoundDate = new DateTime(2020, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Aladin",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 0,
                            Weight = 222.5,
                            WithersHeight = 15.0
                        },
                        new
                        {
                            Id = 13L,
                            AddressId = 2L,
                            CategoryId = 1L,
                            ChipNumber = 12342138L,
                            ContinuatitonOfTreatment = true,
                            DateOfBirth = new DateTime(2018, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 1L,
                            FoundDate = new DateTime(2018, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Alkadin",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 0,
                            Weight = 2.5,
                            WithersHeight = 15.0
                        },
                        new
                        {
                            Id = 14L,
                            AddressId = 2L,
                            CategoryId = 1L,
                            ChipNumber = 32132688L,
                            ContinuatitonOfTreatment = true,
                            DateOfBirth = new DateTime(2018, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 1L,
                            FoundDate = new DateTime(2018, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = false,
                            IsHidden = false,
                            Name = "Neo",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 0,
                            Weight = 42.5,
                            WithersHeight = 125.0
                        },
                        new
                        {
                            Id = 15L,
                            AddressId = 4L,
                            CategoryId = 2L,
                            ChipNumber = 88885688L,
                            ContinuatitonOfTreatment = false,
                            DateOfBirth = new DateTime(2012, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 3L,
                            FoundDate = new DateTime(2015, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            IsAdopted = true,
                            IsHidden = false,
                            Name = "Theo",
                            NeckCircumference = 0.20000000000000001,
                            Sterialization = 0,
                            Weight = 2.5,
                            WithersHeight = 15.0
                        },
                        new
                        {
                            Id = 16L,
                            AddressId = 3L,
                            CategoryId = 2L,
                            ChipNumber = 12345611L,
                            ContinuatitonOfTreatment = true,
                            DateOfBirth = new DateTime(2014, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodId = 2L,
                            FoundDate = new DateTime(2018, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            IsAdopted = true,
                            IsHidden = true,
                            Name = "Baron",
                            NeckCircumference = 10.199999999999999,
                            Sterialization = 0,
                            Weight = 2.5,
                            WithersHeight = 15.0
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalAttitudeTo", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<long>("AttitudeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.HasKey("AnimalId", "AttitudeId");

                    b.HasIndex("AttitudeId");

                    b.ToTable("AnimalAttitudeTo");

                    b.HasData(
                        new
                        {
                            AnimalId = 4L,
                            AttitudeId = 1L,
                            Mark = 3
                        },
                        new
                        {
                            AnimalId = 2L,
                            AttitudeId = 2L,
                            Mark = 3
                        },
                        new
                        {
                            AnimalId = 12L,
                            AttitudeId = 1L,
                            Mark = 3
                        },
                        new
                        {
                            AnimalId = 11L,
                            AttitudeId = 4L,
                            Mark = 2
                        },
                        new
                        {
                            AnimalId = 11L,
                            AttitudeId = 1L,
                            Mark = 5
                        },
                        new
                        {
                            AnimalId = 11L,
                            AttitudeId = 3L,
                            Mark = 4
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalDefects", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<long>("DefectsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId", "DefectsId");

                    b.HasIndex("DefectsId");

                    b.ToTable("AnimalDefects");

                    b.HasData(
                        new
                        {
                            AnimalId = 13L,
                            DefectsId = 1L
                        },
                        new
                        {
                            AnimalId = 10L,
                            DefectsId = 2L
                        },
                        new
                        {
                            AnimalId = 8L,
                            DefectsId = 1L
                        },
                        new
                        {
                            AnimalId = 11L,
                            DefectsId = 4L
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalKeeping", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<long>("KeepingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId", "KeepingId");

                    b.HasIndex("KeepingId");

                    b.ToTable("AnimalKeeping");

                    b.HasData(
                        new
                        {
                            AnimalId = 2L,
                            KeepingId = 3L
                        },
                        new
                        {
                            AnimalId = 2L,
                            KeepingId = 1L
                        },
                        new
                        {
                            AnimalId = 3L,
                            KeepingId = 3L
                        },
                        new
                        {
                            AnimalId = 4L,
                            KeepingId = 2L
                        },
                        new
                        {
                            AnimalId = 5L,
                            KeepingId = 1L
                        },
                        new
                        {
                            AnimalId = 6L,
                            KeepingId = 2L
                        },
                        new
                        {
                            AnimalId = 7L,
                            KeepingId = 1L
                        },
                        new
                        {
                            AnimalId = 8L,
                            KeepingId = 2L
                        },
                        new
                        {
                            AnimalId = 9L,
                            KeepingId = 1L
                        },
                        new
                        {
                            AnimalId = 10L,
                            KeepingId = 2L
                        },
                        new
                        {
                            AnimalId = 11L,
                            KeepingId = 1L
                        },
                        new
                        {
                            AnimalId = 12L,
                            KeepingId = 2L
                        },
                        new
                        {
                            AnimalId = 12L,
                            KeepingId = 1L
                        },
                        new
                        {
                            AnimalId = 13L,
                            KeepingId = 1L
                        },
                        new
                        {
                            AnimalId = 14L,
                            KeepingId = 2L
                        },
                        new
                        {
                            AnimalId = 15L,
                            KeepingId = 1L
                        },
                        new
                        {
                            AnimalId = 16L,
                            KeepingId = 1L
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalNeeds", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<long>("NeedsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId", "NeedsId");

                    b.HasIndex("NeedsId");

                    b.ToTable("AnimalNeeds");

                    b.HasData(
                        new
                        {
                            AnimalId = 2L,
                            NeedsId = 3L
                        },
                        new
                        {
                            AnimalId = 2L,
                            NeedsId = 2L
                        },
                        new
                        {
                            AnimalId = 3L,
                            NeedsId = 1L
                        },
                        new
                        {
                            AnimalId = 7L,
                            NeedsId = 3L
                        },
                        new
                        {
                            AnimalId = 8L,
                            NeedsId = 2L
                        },
                        new
                        {
                            AnimalId = 14L,
                            NeedsId = 1L
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalProcessing", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProcessingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NextProcessingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProcessingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AnimalId", "ProcessingId");

                    b.HasIndex("ProcessingId");

                    b.ToTable("AnimalProcessing");

                    b.HasData(
                        new
                        {
                            AnimalId = 7L,
                            ProcessingId = 1L,
                            NextProcessingDate = new DateTime(2020, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProcessingDate = new DateTime(2019, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 4L,
                            ProcessingId = 2L,
                            NextProcessingDate = new DateTime(2019, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProcessingDate = new DateTime(2019, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 8L,
                            ProcessingId = 2L,
                            NextProcessingDate = new DateTime(2020, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProcessingDate = new DateTime(2019, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 11L,
                            ProcessingId = 1L,
                            NextProcessingDate = new DateTime(2019, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProcessingDate = new DateTime(2018, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 11L,
                            ProcessingId = 2L,
                            NextProcessingDate = new DateTime(2020, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProcessingDate = new DateTime(2019, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 9L,
                            ProcessingId = 2L,
                            NextProcessingDate = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProcessingDate = new DateTime(2019, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalVaccination", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<long>("VaccinationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NextVaccinationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VaccinationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AnimalId", "VaccinationId");

                    b.HasIndex("VaccinationId");

                    b.ToTable("AnimalVaccination");

                    b.HasData(
                        new
                        {
                            AnimalId = 2L,
                            VaccinationId = 3L,
                            NextVaccinationDate = new DateTime(2020, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VaccinationDate = new DateTime(2019, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 2L,
                            VaccinationId = 4L,
                            NextVaccinationDate = new DateTime(2020, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VaccinationDate = new DateTime(2019, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 3L,
                            VaccinationId = 2L,
                            NextVaccinationDate = new DateTime(2020, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VaccinationDate = new DateTime(2019, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 5L,
                            VaccinationId = 1L,
                            NextVaccinationDate = new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VaccinationDate = new DateTime(2018, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 5L,
                            VaccinationId = 3L,
                            NextVaccinationDate = new DateTime(2020, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VaccinationDate = new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AnimalId = 5L,
                            VaccinationId = 5L,
                            NextVaccinationDate = new DateTime(2020, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VaccinationDate = new DateTime(2019, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Models.AttitudeTo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AttitudeTo");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Adults"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Childrens"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Cats"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Dogs"
                        });
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Dog"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Cat"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("Domain.Models.Defect", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Defects");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Type = "Front pow disability"
                        },
                        new
                        {
                            Id = 2L,
                            Type = "Back pow disability"
                        },
                        new
                        {
                            Id = 3L,
                            Type = "Vision disability"
                        },
                        new
                        {
                            Id = 4L,
                            Type = "Hearing disability"
                        });
                });

            modelBuilder.Entity("Domain.Models.Food", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Premium feed"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Medical feed"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Natural feed"
                        });
                });

            modelBuilder.Entity("Domain.Models.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<long?>("AnimalId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Img")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId1");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Domain.Models.Keeping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Keepings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Flat"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Enclosed house with yard"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Wintering only in the house"
                        });
                });

            modelBuilder.Entity("Domain.Models.Needs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Needs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Need to be housed with other animals"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Need to be housed apart from other animals"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Need for a suitable diet"
                        });
                });

            modelBuilder.Entity("Domain.Models.Processing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Processings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Type = "Anti-flea and anti-ticks processing"
                        },
                        new
                        {
                            Id = 2L,
                            Type = "Anti-worms processing"
                        });
                });

            modelBuilder.Entity("Domain.Models.Vaccination", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Vaccinations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Daramoon",
                            Type = "Common"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Vangard",
                            Type = "Common"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Nobivak",
                            Type = "Common"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Rabisin",
                            Type = "Rabies vaccine"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Rabistar",
                            Type = "Rabies vaccine"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animal", b =>
                {
                    b.HasOne("Domain.Models.Address", "Address")
                        .WithMany("Animals")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Category", "Category")
                        .WithMany("Animals")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Food", "Food")
                        .WithMany("Animals")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.AnimalAttitudeTo", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("AnimalAttitudes")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.AttitudeTo", "AttitudeTo")
                        .WithMany("AnimalAttitudes")
                        .HasForeignKey("AttitudeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.AnimalDefects", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("AnimalDefects")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Defect", "Defect")
                        .WithMany("AnimalDefects")
                        .HasForeignKey("DefectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.AnimalKeeping", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("AnimalKeepings")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Keeping", "Keeping")
                        .WithMany("AnimalKeepings")
                        .HasForeignKey("KeepingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.AnimalNeeds", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("AnimalNeeds")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Needs", "Needs")
                        .WithMany("AnimalNeeds")
                        .HasForeignKey("NeedsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.AnimalProcessing", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("AnimalProcessings")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Processing", "Processing")
                        .WithMany("AnimalProcessings")
                        .HasForeignKey("ProcessingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.AnimalVaccination", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("AnimalVaccinations")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Vaccination", "Vaccination")
                        .WithMany("AnimalVaccinations")
                        .HasForeignKey("VaccinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Image", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("Images")
                        .HasForeignKey("AnimalId1");
                });
#pragma warning restore 612, 618
        }
    }
}
